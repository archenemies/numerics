# --- Minimal Test Suite ---

# Helper: print structure clearly
show_test = function(x) {
  print(x)
  print(dim(x))
  print(dimnames(x))
  print(attr(x, "dimindices"))
}

cat("=== Test 1: Basic ibind with dim=1 ===\n")
v1 = array(1:3, dim=c(3,1))
dimnames(v1) = list(c("x", "y", "z"), NULL)
v1 = iprep(v1)

v2 = array(4:6, dim=c(3,1))
dimnames(v2) = list(c("u", "v", "w"), NULL)
v2 = iprep(v2)

u = ibind(dim=2, a=v1, b=v2)
show_test(u)

stopifnot(dim(u) == c(3, 2))
stopifnot(attr(u, "dimindices")[[2]]$a == 1)
stopifnot(attr(u, "dimindices")[[2]]$b == 2)
stopifnot(attr(u, "dimindices")[[1]]$a$x == 1)
stopifnot(attr(u, "dimindices")[[1]]$b$w == 3)

cat("=== Test 2: ibind with unnamed dimnames (autonaming) ===\n")
v3 = array(1:2, dim=c(2,1))
v4 = array(3:4, dim=c(2,1))
v3 = iprep(v3)
v4 = iprep(v4)

u2 = ibind(dim=2, a=v3, b=v4)
show_test(u2)

stopifnot(identical(dim(u2), c(2, 2)))
stopifnot("a$1" %in% dimnames(u2)[[2]])

cat("=== Test 3: ifetch by top-level name ===\n")
got = ifetch(u, "a", dim=2)
print(got)
stopifnot(all(got == v1))

cat("=== Test 4: ifetch by compound name ===\n")
got2 = ifetch(u, "b$w", dim=1)
print(got2)
stopifnot(all(got2 == v2[3, , drop=FALSE]))

cat("=== Test 5: automatic dim detection ===\n")
got3 = ifetch(u, "b$w")
print(got3)
stopifnot(all(got3 == v2[3, , drop=FALSE]))

cat("All tests passed.\n")
